// services/database.js - K·∫øt n·ªëi v√† qu·∫£n l√Ω database

const mongoose = require('mongoose');

/**
 * K·∫øt n·ªëi ƒë·∫øn MongoDB
 */
const connectDatabase = async () => {
  try {
    const mongoURI = process.env.MONGODB_URI || 'mongodb://localhost:27017/phong_thuy_so';
    
    // C·∫•u h√¨nh k·∫øt n·ªëi
    const options = {
      // Lo·∫°i b·ªè c√°c option ƒë√£ ƒë∆∞·ª£c deprecated
      serverSelectionTimeoutMS: 5000, // Th·ªùi gian timeout cho qu√° tr√¨nh ch·ªçn server
      connectTimeoutMS: 10000, // Th·ªùi gian timeout k·∫øt n·ªëi
    };

    // Th·ª±c hi·ªán k·∫øt n·ªëi
    await mongoose.connect(mongoURI, options);
    
    console.log('‚úÖ K·∫øt n·ªëi th√†nh c√¥ng ƒë·∫øn MongoDB');
    
    // X·ª≠ l√Ω s·ª± ki·ªán m·∫•t k·∫øt n·ªëi
    mongoose.connection.on('error', (err) => {
      console.error('‚ùå L·ªói k·∫øt n·ªëi MongoDB:', err);
    });

    mongoose.connection.on('disconnected', () => {
      console.warn('‚ö†Ô∏è M·∫•t k·∫øt n·ªëi ƒë·∫øn MongoDB, ƒëang th·ª≠ k·∫øt n·ªëi l·∫°i...');
    });

    // X·ª≠ l√Ω khi Node.js process k·∫øt th√∫c
    process.on('SIGINT', async () => {
      try {
        await mongoose.connection.close();
        console.log('üìù ƒê√≥ng k·∫øt n·ªëi MongoDB do ·ª©ng d·ª•ng k·∫øt th√∫c');
        process.exit(0);
      } catch (err) {
        console.error('‚ùå L·ªói khi ƒë√≥ng k·∫øt n·ªëi MongoDB:', err);
        process.exit(1);
      }
    });
    
    return mongoose.connection;
  } catch (error) {
    console.error('‚ùå L·ªói k·∫øt n·ªëi ƒë·∫øn MongoDB:', error.message);
    // Kh√¥ng tho√°t quy tr√¨nh, ch·ªâ throw l·ªói ƒë·ªÉ x·ª≠ l√Ω ·ªü n∆°i g·ªçi
    throw error;
  }
};

module.exports = { connectDatabase }; 